
services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Rs04061998.
      MYSQL_DATABASE: users
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      - backend-network
    volumes:
      # Volume for persistent data
      - mysql_data:/var/lib/mysql
      
      # Mount the SQL dump file for initial database setup
      - ./users_dump.sql:/docker-entrypoint-initdb.d/users_dump.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "", "-p$$MYSQL_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/users
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend-network
  frontend:
    build:
      context: ./frontend/movies_jpa_frontend/
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/movies_jpa_frontend:/usr/app  
      - /usr/app/node_modules  
    networks:
      - backend-network

    environment:
      CHOKIDAR_USEPOLLING: "true"
   
  nginx:

    build:
      context: ./nginx.conf
      dockerfile: Dockerfile
    container_name: nginx-frontend
    ports:
      - "8080:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - backend-network
networks:
  backend-network:
    driver: bridge

volumes:
  mysql_data:

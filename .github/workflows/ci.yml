name: Build and Test Fullstack Application

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'nginx.conf/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'nginx.conf/**'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      #####################################
      # Checkout Repository
      #####################################
      - name: Checkout repository
        uses: actions/checkout@v4

      #####################################
      # Check for Backend Changes
      #####################################
      - name: Check Backend Changes
        id: backend-check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^backend/'; then
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "changed=false" >> $GITHUB_ENV
          fi

      #####################################
      # Check for Frontend Changes
      #####################################
      - name: Check Frontend Changes
        id: frontend-check
        run: |
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep '^frontend/'; then
            echo "changed=true" >> $GITHUB_ENV
          else
            echo "changed=false" >> $GITHUB_ENV
          fi

      #####################################
      # Setup Java for Backend (Spring Boot)
      #####################################
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/apache/maven/plugins/maven-surefire-plugin
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Spring Boot Backend
        if: env.changed == 'true' && steps.backend-check.outputs.changed == 'true'
        working-directory: ./backend
        run: mvn clean install -DskipTests

      #####################################
      # Setup Node.js for Frontend (React)
      #####################################
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: frontend/movies_jpa_frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/movies_jpa_frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Frontend Dependencies
        if: env.changed == 'true' && steps.frontend-check.outputs.changed == 'true'
        working-directory: ./frontend/movies_jpa_frontend
        run: npm install

      - name: Build React Frontend
        if: env.changed == 'true' && steps.frontend-check.outputs.changed == 'true'
        working-directory: ./frontend/movies_jpa_frontend
        run: npm run build

      #####################################
      # Login to DockerHub
      #####################################
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      #####################################
      # Build and Push Backend Docker Image
      #####################################
      - name: Build and Push Backend Docker Image
        if: env.changed == 'true' && steps.backend-check.outputs.changed == 'true'
        working-directory: ./backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      #####################################
      # Build and Push Frontend Docker Image
      #####################################
      - name: Build and Push Frontend Docker Image
        if: env.changed == 'true' && steps.frontend-check.outputs.changed == 'true'
        working-directory: ./frontend/movies_jpa_frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
      #####################################
      # Deploy to DigitalOcean via SSH
      #####################################
      - name: Deploy to DigitalOcean via SSH
        if: steps.backend-check.outputs.changed == 'true' || steps.frontend-check.outputs.changed == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_VM_HOST }}
          username: ${{ secrets.DO_VM_USER }}
          key: ${{ secrets.DO_VM_SSH_KEY }}
          script: |
            cd /home/deployer/app
            docker-compose pull
            docker-compose up -d --build
            docker image prune -f